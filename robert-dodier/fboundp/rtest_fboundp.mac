(if ?mget ('fboundp, '?mexpr) = false then load ("fboundp.mac"), 0);
0;

/* Name of an operator: */
fboundp("+");
true;
fboundp_operator("+");
true;

(infix("//"), 0);
0;
fboundp("//");
false;
fboundp_operator("//");
false;
(x // y := y - x, 0);
0;
fboundp("//");
true;
fboundp_operator("//");
true;

/* Simplifying function defined in Lisp: */
fboundp(sin);
true;
fboundp_simplifying(sin);
true;

/* DEFUN (ordinary argument-evaluating) function defined in Lisp: */
fboundp(expand);
true;
fboundp_ordinary_lisp(expand);
true;

/* DEFMSPEC (argument-quoting) function defined in Lisp: */
fboundp(kill);
true;
fboundp_quoting(kill);
true;

/* Maxima ordinary function: */
(kill(foo),
foo(x) := x,
fboundp(foo));
true;
fboundp_ordinary_maxima(foo);
true;

/* Maxima array function: */
(kill(bar),
bar[x](y) := x*y,
fboundp(bar));
true;
fboundp_array_function(bar);
true;

/* Maxima macro: */
(kill(baz),
baz(x) ::= buildq([x], x),
fboundp(baz));
true;
fboundp_maxima_macro(baz);
true;
